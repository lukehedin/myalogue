@mixin oversm {
	@media (min-width: #{$screen-width-sm-min}) { @content; }
}
@mixin overmd {
	@media (min-width: #{$screen-width-md-min}) { @content; }
}
@mixin overlg {
	@media (min-width: #{$screen-width-lg-min}) { @content; }
}

@mixin isLandscape {
	@media screen and (orientation:landscape) { @content; }
}

@mixin isPortrait {
	@media screen and (orientation:portrait) { @content; }
}

@mixin absoluteCover {
	position: absolute;	
	height: 100%;
	width: 100%;
	left: 0;
	top: 0;
}

@mixin noSelect {
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

@mixin borderRadius($radius) {
	border-radius: $radius;
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
}

@mixin boxShadow($left, $top, $radius, $color) {
	box-shadow: $left $top $radius $color;
	-webkit-box-shadow: $left $top $radius $color;
	-moz-box-shadow: $left $top $radius $color;
}
@mixin boxShadowInset($left, $top, $radius, $color) {
	box-shadow: inset $left $top $radius $color;
	-webkit-box-shadow: inset $left $top $radius $color;
	-moz-box-shadow: inset $left $top $radius $color;
}

@mixin transition($property, $duration, $easing: linear) {
	transition: $property $duration $easing;
	-webkit-transition: $property $duration $easing;
	-moz-transition: $property $duration $easing;
}

@mixin animation($type, $duration, $style, $direction) {
	-webkit-animation: $type $duration $style $direction;
	animation: $type $duration $style $direction;
}

@mixin keyframes() {

}

@mixin gradient($direction, $list) { 
	background: -webkit-linear-gradient($direction, $list);
	background: -moz-linear-gradient($direction, $list);
	background: -o-linear-gradient($direction, $list);
	background: linear-gradient($direction, $list);  
}

// Function for converting a px based font-size to rem.
@function calculateRem($size) {
	$remSize: $size / 16px;
	//Default font size on html element is 100%, equivalent to 16px;
	@return #{$remSize}rem;
}
  
// Mixin that will include the fall back px declaration as well as the calculated rem value.
@mixin fontSize($size) {
	font-size: $size;
	font-size: calculateRem($size);
}

//selector mixins

@mixin allHeadings {
	h1,h2,h3,h4,h5,h6 {
		@content;
	}
}

@mixin svgColourStroke($colour) {
	path {
		fill: $colour;
	}
}

@mixin textInputs {
	input, select, textarea {
		&:not([type=checkbox]), &:not([type=radio]) {
			@content;
		}
	}
}

//Comic mixins

@mixin canFitTwoComicPanels {
	//If any problems arise from this combo, simply replace with a single isLandscape
	@include isLandscape  {
		@include oversm {
			@content;
		}
	}
	@include isPortrait() {
		@include overmd {
			@content;
		}
	}
}

@mixin comicWrapperStyle {
	//The wrapper around a collection of comic panels, makes the border consistent width and gives curve
	border: 1px solid $colour-grey-b;
	background-color: $colour-white;
	@include borderRadius(4px);
	@include boxShadow(6px, 6px, 6px, #00000016);
}

@mixin applyComicPanelWidth ($scale) {
	width: calc(#{$comic-panel-base-width} * #{$scale});
}
@mixin applyComicPanelHeight ($scale) {
	height: calc(#{$comic-panel-base-height} * #{$scale});
}