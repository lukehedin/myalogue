@import './styles/variables.scss';
@import './styles/animations.scss';
@import './styles/mixins.scss';

body {
	margin: 0;
	padding: 0;
	font-family: sans-serif;
	background-color: $colour-white;
	color: $colour-black;
	text-align: left;

	.app-container {
		position: relative;
		overflow-y: scroll;
		overflow-x: hidden;

		&.no-scroll {
			overflow: hidden;

			&.scrollbar-margin {
				margin-right: 17px;
			}
		}

		.app {
			@import './components/UI/UI.scss';
			@import './components/Pages/pages.scss';
			height: 100%;

			.app-inner {
				display: flex;
				flex-direction: column;
				min-height: 100%;
	
				[class^="page-"] {
					flex: 1;
					display: flex;
					flex-direction: column;
					position: relative;

					.page-title {
						text-align: center;
					}
	
					.page-subtitle {
						text-align: center;
						margin: $spacing-xs auto;
						color: $colour-grey-e;
					}

					//Makes the last panel stretched to bottom
					>:last-child {
						flex: 1;
					}
				}
		
				[class^="panel-"] {
					padding: $spacing-md 0;

					&:first-child {
						padding-top: $spacing-sm;
						@include overlg {
							padding-top: $spacing-md;
						}
					}

					&.panel-standard {
						background-color: $colour-grey-a;
					}
					
					&.panel-inset {
						//Hide side boxshadows
						margin-left: -$spacing-sm;
						margin-right: -$spacing-sm;
						padding-left: $spacing-sm;
						padding-right: $spacing-sm;
		
						background-color: $colour-white;
						@include boxShadowInset(0, 0, 8px, $colour-transparent-grey);
					}
				}

				hr {
					width: 100%;
					border: none;
					border-bottom: 1px solid $colour-grey-b;
					margin: $spacing-md 0;
					@include oversm {
						margin: $spacing-md 0;
					}
				}
			}

			.container {
				position: relative;
				margin: 0 auto;
				max-width: 648px;
		
				.row {
					position: relative;
					padding: 0 $spacing-sm;
				}
			}
		}

		.loader {
			position: absolute;
			height: 100%;
			width: 100%;
			top: 0;
			left: 0;
			z-index: 5;
			&.masked {
				background-color: $colour-transparent-grey;
			}

			&.image-loader {
				> img {
					position: absolute;
					animation: loader-spin 1.6s linear infinite;
					left: 50%;
					top: 50%;
					width: 48px;
					height: 48px;
					margin-top: -24px;
					margin-left: -24px;
				}
			}

			&:not(.image-loader) {
				&:before {
					content: '';
					position: absolute;
					border: 4px solid transparent;
					border-top: 4px solid $colour-pink;
					border-radius: 50%;
					width: 32px;
					height: 32px;
					margin-top: -16px;
					margin-left: -16px;
					left: 50%;
					top: 50%;
					animation: loader-spin 0.3s linear infinite;
				}
			}
		}
	
		.hidden {
			display: none;
		}

		.disabled {
			opacity: 0.2;
			pointer-events: none;
		}
	
		.invisible {
			opacity: 0;
		}

		.no-select {
			@include noSelect;
		}
	
		.flex-spacer {
			flex: 1;
		}

		.button-container {
			display: flex;
			flex-direction: row;
			align-items: center; 

			&.justify-center {
				justify-content: center;
			}

			> * {
				&:not(:first-child) {
					margin-left: $spacing-xs;
				}
			}
		}

		.comic-wrapper {
			display: flex;
			flex-direction: column;
			align-items: center;
		}
	
		.modal-overlay {
			@include absoluteCover;
			position: fixed; //override absolute
			background-color: $colour-transparent-grey-dark;
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			z-index: 20;
		}
		
		@include allHeadings {
			margin: 0;
			overflow-wrap: break-word;
			text-align: center;
		}

		h3 {
			color: $colour-grey-d;
		}

		h5 {
			text-transform: uppercase;
		}

		p {
			margin: $spacing-sm 0;
			&.sm {
				margin: $spacing-xs 0;
				font-size: 12px;
			}

			&.empty-text {
				font-size: 14px;
				text-align: center;
				color: $colour-grey-d;
			}

			&:first-child {
				margin-top: 0;
			}

			&:last-child {
				margin-bottom: 0;
			} 

			&.center {
				text-align: center;
			}
		}

		span, p {
			&.pink {
				color: $colour-pink;
			}
		}

		a, .faux-link {
			text-decoration: none;
			&:not(.link-no-style) {
				color: $colour-pink;
				cursor: pointer;
				&:hover {
					text-decoration: underline;
				}
			}
		}

		@include textInputs {
			background-color: $colour-white;
			padding: $spacing-xs;
			@include borderRadius(4px);
			font-size: 14px;
			font-family: $font-family-default;

			border: 1px solid $colour-grey-b;
			outline: none;
			-webkit-box-shadow: none;
			-moz-box-shadow: none;
			box-shadow: none;
		
			&:focus {
				border-color: $colour-grey-c;
			}
		}

		.sorry-panel {
			margin: 0 auto;
			max-width: 500px;
			display: flex;
			flex-direction: column;
			align-items: center;
			text-align: center;
			margin-top: $spacing-md;
		}


		//Comic scaling - as the scale of comics affects other elements (eg. comic-footer-lower)
		//We do this here in the one place instead of on individual elements repeatedly
		@mixin scaleComicPanel ($scale) {
			.comic-panel {
				@include applyComicPanelHeight($scale);
				@include applyComicPanelWidth($scale);
				
				.dialogue {
					> * {
						line-height: calc(#{$comic-panel-base-dialogue-line-height} * #{$scale});
						font-size: calc(#{$comic-panel-base-dialogue-font-size} * #{$scale});
					}
				}
				.comic-panel-subtle {
					line-height: calc(#{$comic-panel-base-author-line-height} * #{$scale});
					font-size: calc(#{$comic-panel-base-author-font-size} * #{$scale});
				}
			}

			//Elements that need to match the width of a COMIC
			.comic-width {
				@include applyComicPanelWidth($scale);
				@include canFitTwoComicPanels {
					@include applyComicPanelWidth($scale * 2);
				}
			}
			//Elements that need to match the width of a COMIC PANEL
			.comic-panel-width {				
				@include applyComicPanelWidth($scale);
			}

			.comic-panel-height {
				@include applyComicPanelHeight($scale);
			}
		}
		//Portrait
		@include scaleComicPanel($comic-panel-scale-sm);
		@media (min-width: 360px) {
			@include scaleComicPanel($comic-panel-scale-md);
		}
		@media (min-width: 700px) {
			@include scaleComicPanel($comic-panel-scale-lg);
		}
		//Landscape
		@include isLandscape {
			@include scaleComicPanel($comic-panel-scale-sm);
			@media (min-height: 680px) {
				@include scaleComicPanel($comic-panel-scale-md);
			}
			@media (min-height: 800px) {
				@include scaleComicPanel($comic-panel-scale-lg);
			}
		}
	}
}